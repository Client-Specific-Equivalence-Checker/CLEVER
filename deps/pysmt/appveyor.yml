image:
- Visual Studio 2015

environment:
  matrix:
    - PYTHON: "C:\\Python27-x64"
      PYTHON_VERSION: "2.7.x"
      PYTHON_ARCH: "64"
      PYSMT_SOLVER: "None"

    - PYTHON: "C:\\Python36-x64"
      PYTHON_VERSION: "3.6.x"
      PYTHON_ARCH: "64"
      PYSMT_SOLVER: "None"


    - PYTHON: "C:\\Python27"
      PYTHON_VERSION: "2.7.x"
      PYTHON_ARCH: "32"
      PYSMT_SOLVER: "z3"

    - PYTHON: "C:\\Python27-x64"
      PYTHON_VERSION: "2.7.x"
      PYTHON_ARCH: "64"
      PYSMT_SOLVER: "z3"

    - PYTHON: "C:\\Python36"
      PYTHON_VERSION: "3.6.x"
      PYTHON_ARCH: "32"
      PYSMT_SOLVER: "z3"

    - PYTHON: "C:\\Python36-x64"
      PYTHON_VERSION: "3.6.x"
      PYTHON_ARCH: "64"
      PYSMT_SOLVER: "z3"


    - PYTHON: "C:\\Python27-x64"
      PYTHON_VERSION: "2.7.x"
      PYTHON_ARCH: "64"
      PYSMT_SOLVER: "msat"

    - PYTHON: "C:\\Python36-x64"
      PYTHON_VERSION: "3.6.x"
      PYTHON_ARCH: "64"
      PYSMT_SOLVER: "msat"


install:
  # Install Python (from the official .msi of http://python.org) and pip when
  # not already installed.
  - ps: "./ci/appveyor/install.ps1"

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - cmd: "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - cmd: "python --version"
  - cmd: "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  - cmd: "pip install -r dev-requirements.txt"

  # Update setputools
  - cmd: "pip install --upgrade setuptools"

  # Install the solvers
  - cmd: "python install.py --confirm-agreement"

  # Set and check the pythonpath
  - cmd: "python install.py --env > bindings_path.bat"
  - cmd: "call ./bindings_path.bat"
  - ECHO "PythonPath=%PYTHONPATH%"
  - ECHO "Path=%PATH%"

build: false

test_script:
  - cmd: "python install.py --check"
  - cmd: "nosetests -v "

# after_test:
#    # If tests are successful, create a whl package for the project.
#    - cmd: "python setup.py bdist_wheel bdist_wininst"
#    - ps: "ls dist"

# artifacts:
#   # Archive the generated wheel package in the ci.appveyor.com build report.
#   - path: dist\*
